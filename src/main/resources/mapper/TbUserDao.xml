<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zhouzhao.office.online_collaborative_office.dao.TbUserDao">

    <resultMap type="com.zhouzhao.office.online_collaborative_office.entity.TbUser" id="TbUserMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="openId" column="open_id" jdbcType="VARCHAR"/>
        <result property="nickname" column="nickname" jdbcType="VARCHAR"/>
        <result property="photo" column="photo" jdbcType="VARCHAR"/>
        <result property="name" column="name" jdbcType="VARCHAR"/>
        <result property="sex" column="sex" jdbcType="VARCHAR"/>
        <result property="tel" column="tel" jdbcType="VARCHAR"/>
        <result property="email" column="email" jdbcType="VARCHAR"/>
        <result property="hiredate" column="hiredate" jdbcType="TIMESTAMP"/>
        <result property="role" column="role" jdbcType="VARCHAR"/>
        <result property="root" column="root" jdbcType="INTEGER"/>
        <result property="deptId" column="dept_id" jdbcType="INTEGER"/>
        <result property="status" column="status" jdbcType="INTEGER"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
    </resultMap>


    <select id="haveRootUser" resultType="java.lang.Boolean">
        select if(count(1), True, False)
        from tb_user
        where root = 1
    </select>


    <select id="getUserPermissions" parameterType="integer" resultType="String">
        SELECT p.permission_name
        FROM tb_user u
                 JOIN tb_role r ON JSON_CONTAINS(
                u.role,
                cast(r.id AS CHAR))
                 JOIN tb_permission p ON JSON_CONTAINS(
                r.permissions,
                CAST(p.id AS CHAR))
        WHERE u.id = #{userId}
          and u.`status` = 1;
    </select>


    <select id="getIdByOpenId" parameterType="String" resultType="Integer">
        select id
        from tb_user
        where open_id = #{openId}
          and status = 1
    </select>

    <select id="getNameAndDeptAndTel" parameterType="integer"
            resultType="com.zhouzhao.office.online_collaborative_office.entity.TbUser">
        SELECT u.name, d.dept_name, u.tel
        FROM tb_user u
                 LEFT JOIN tb_dept d ON u.dept_id = d.id
        WHERE u.id = #{userId}
          AND u.status = 1
    </select>


    <select id="getUserById" parameterType="integer"
            resultType="com.zhouzhao.office.online_collaborative_office.entity.TbUser">
        select u.*, td.dept_name
        from tb_user u
                 left join tb_dept td on u.dept_id = td.id
        where u.id = #{userId}
          AND u.status = 1

    </select>

    <select id="getUserHiredate" parameterType="integer" resultType="String">
        SELECT hiredate
        FROM tb_user
        WHERE id = #{userId}
          AND status = 1
    </select>
    <select id="getUserGroupByDept" parameterType="String" resultType="HashMap">
        SELECT
        d.id AS deptId ,
        d.dept_name AS deptName,
        u.id AS userId,
        u.name
        FROM tb_dept d JOIN tb_user u ON u.dept_id=d.id
        WHERE u.status=1
        <if test="keyword!=null">
            AND u.name LIKE '%${keyword}%'
        </if>
        ORDER BY d.id, u.id;
    </select>

    <select id="getMembers" parameterType="list"
            resultType="com.zhouzhao.office.online_collaborative_office.entity.TbUser">
        SELECT id,name,photo
        FROM tb_user
        WHERE status = 1
        AND id IN
        <foreach collection="list" item="one" separator="," open="(" close=")">
            #{one}
        </foreach>
    </select>

    <select id="getUserInfo" parameterType="integer"
            resultType="com.zhouzhao.office.online_collaborative_office.entity.TbUser">
        SELECT u.open_id                                        AS openId,
               u.nickname,
               u.name,
               u.photo,
               u.sex,
               u.tel,
               u.email,
               d.dept_name                                      AS deptName,
               u.hiredate,
               u.status,
               (SELECT GROUP_CONCAT(role_name separator "，")
                FROM tb_role
                WHERE JSON_CONTAINS(u.role, CONVERT(id, CHAR))) AS roles
        FROM tb_user u
                 LEFT JOIN tb_dept d ON u.dept_id = d.id
        WHERE u.id = #{userId}
          AND u.status = 1
    </select>

    <select id="getDeptManagerId" parameterType="integer" resultType="String">
        SELECT u2.id
        FROM tb_user u1
                 JOIN tb_user u2 ON u1.dept_id = u2.dept_id
                 JOIN tb_role r ON JSON_CONTAINS(u2.role, CAST(r.id AS CHAR))
        WHERE u1.id = #{id}
          AND r.role_name = "部门经理"
          AND u1.status = 1
          AND u2.status = 1
    </select>

    <select id="getGmId" resultType="Integer">
        SELECT u.id
        FROM tb_user u
                 JOIN tb_role r ON JSON_CONTAINS(u.role, CAST(r.id AS CHAR))
        WHERE r.role_name = "总经理"
          AND u.status = 1
    </select>

    <select id="getMeetingMembers" parameterType="integer"
            resultType="com.zhouzhao.office.online_collaborative_office.entity.TbUser">
        SELECT u.id,
               u.name,
               u.photo
        FROM tb_meeting m
                 JOIN tb_user u ON JSON_CONTAINS(m.members, cast(u.id as char))
        WHERE m.id = #{id}
          AND u.status = 1
    </select>

    <select id="getUserPhotoAndName" parameterType="list" resultType="com.zhouzhao.office.online_collaborative_office.entity.TbUser">
        SELECT
        `id`,`name`,`photo`
        FROM tb_user
        WHERE status = 1 AND id IN
        <foreach collection="list" open="(" close=")" item="one" separator=",">
            #{one}
        </foreach>
    </select>

    <select id="getMemberEmail" parameterType="integer" resultType="String">
        SELECT email FROM tb_user WHERE id=#{id} AND status = 1
    </select>


</mapper>

